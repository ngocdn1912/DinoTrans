@inject IJSRuntime js
@inject ITenderService TenderService
<button class="btn btn-outline-danger" @onclick="OpenDialog">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-box-arrow-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M6 12.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-1 0v-2A1.5 1.5 0 0 1 6.5 2h8A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-8A1.5 1.5 0 0 1 5 12.5v-2a.5.5 0 0 1 1 0z" />
        <path fill-rule="evenodd" d="M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708z" />
    </svg>
</button>
<dialog style="position:fixed; top:50%; left:50%; transform: translate(-50%, -50%); min-width:600px; min-height:500px" id="withdraw-dialog-@TenderId">
    <div class="card">
        <div class="card-header text-center">
            <img src="/images/BackArrow.png" style="min-width:50px;min-height:50px;max-width:100px;max-height:100px;">
            <div>Hủy thầu vận tải</div>
        </div>
        <div class="card-body text-center">
            <div>Lý do hủy thầu</div>
            <textarea style="min-height:200px;width:100%;padding:5px" placeholder="Nhập lý do hủy..." @bind="withdrawTenderDTO.WithdrawReason"></textarea>
        </div>
        <div class="card-footer row">
            <div class="form-group col-md-6">
                <button class="btn btn-outline-danger ms-2" type="submit" @onclick="Close">Hủy</button>
            </div>
            <div class="form-group col-md-6">
                <button style="max-width:100px" class="btn btn-outline-success float-end me-2" type="submit" @onclick="Withdraw">Xác nhận</button>
            </div>
        </div>
    </div>
</dialog>
@code {
    [Parameter]
    public int TenderId { get; set; }
    public WithdrawTenderDTO withdrawTenderDTO { get; set; }
    [Parameter]
    public EventCallback ChangeData { get; set; }
    protected override async Task OnInitializedAsync()
    {
        withdrawTenderDTO = new WithdrawTenderDTO
        {
            TenderID = TenderId,
            WithdrawReason = "",
        };
    }
    protected override async Task OnParametersSetAsync()
    {
        withdrawTenderDTO.TenderID = TenderId;
    }
    public async Task OpenDialog()
    {
        await js.InvokeVoidAsync("OpenDialog", $"withdraw-dialog-{TenderId}");
    }

    async void Close()
    {
        withdrawTenderDTO.TenderID = 0;
        withdrawTenderDTO.WithdrawReason = "";
        await js.InvokeVoidAsync("CloseDialog", $"withdraw-dialog-{TenderId}");
    }

    public async Task Withdraw()
    {
        var result = await TenderService.UpdateWithdrawTender(withdrawTenderDTO);
        if (result.Flag)
        {
            await ChangeData.InvokeAsync();
            Close();
        }
        else
            await js.InvokeVoidAsync("alert", result.Message);
    }
}
