@inject IJSRuntime js
@inject IConstructionMachineService ConstructionMachineServcie
@using Microsoft.AspNetCore.Hosting
<div class="col-md-6">
    @if (AllPictures.Count > 0)
    {
        <button style="max-width:100px; max-height:100px; border:none" @onclick="OpenDialog">      
            <b style="color:green">
            <u>Xem</u>
        </b>
        </button>
    }
    else
    {
        <div>Không có ảnh</div>
    }
    <dialog style="position:fixed; top:50%; left:50%; transform: translate(-50%, -50%); min-width:500px; min-height:500px" id="dialog-ViewPictures-@MachineId">
        <div class="card">
            <div class="row">
                <div class="card-body p-4">
                    @if (AllPictures != null && AllPictures.Count != 0)
                    {
                        foreach (var item in AllPictures)
                        {
                            <div class="form-group mt-3">
                                <img src="@item" style="min-width:400px;min-height:400px;max-height:650px;max-width:650px" />
                            </div>
                        }
                    }
                    <div class="card-footer row">
                        <div class="form-group col-md-6">
                            <button class="btn btn-secondary ms-2" type="submit" @onclick="Close">Đóng</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </dialog>
</div>

@code {
    [Parameter]
    public List<Dictionary<string, string>> ListImanges { get; set; } = new();
    [Parameter]
    public int MachineId { get; set; }
    public string FirstPicture { get; set; }
    public List<string> AllPictures { get; set; } = new();
    async Task OpenDialog()
    {
        await js.InvokeVoidAsync("ViewPictures",MachineId);
    }
    protected override async Task OnParametersSetAsync()
    {
        AllPictures = new();
        if (ListImanges.Count > 0)
        {
            for(int i = 0; i< ListImanges.Count; i++)
            {
                AllPictures.Add(ListImanges[i][$"Image_{i}"]);
            }
            FirstPicture = AllPictures.FirstOrDefault();
        }
    }

    async void Close()
    {
        await js.InvokeVoidAsync("closeModalViewPictures",MachineId);
    }
}
