@inject IJSRuntime js
@inject ICompanyService CompanyService
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@using Microsoft.AspNetCore.Hosting

<button class="btn btn-primary" @onclick="OpenDialog">Chỉnh sửa</button>

<dialog style="position:fixed; top:50%; left:50%; transform: translate(-50%, -50%); min-width:500px; min-height:500px" id="my-company-@">
    <EditForm Model="dto">
        <div class="card">
            <div class="column">
                <div class="card-header text-center column">
                    <img src="/images/CompanyDefault.png" />
                    <div>Chỉnh sửa thông tin công ty</div>
                </div>
                <div class="card-body p-4">
                    <div class="form-group mt-3">
                        <label class="form-label">Tên công ty</label>
                        <input type="text" @bind="dto.CompanyName" class="form-control" />
                    </div>

                    <div class="form-group mt-3">
                        <label class="form-label">Email</label>
                        <input type="text" @bind="dto.Email" class="form-control" />
                    </div>

                    <div class="form-group mt-3">
                        <label class="form-label">Địa chỉ</label>
                        <input type="text" @bind="dto.Address" class="form-control" />
                    </div>

                    <div class="form-group mt-3">
                        <label class="form-label">Số điện thoại</label>
                        <input type="text" @bind="dto.PhoneNumber" class="form-control" />
                    </div>

                    @if (currentCompanyRole.HasValue && currentCompanyRole.Value == CompanyRoleEnum.Admin)
                    {

                        <div class="form-group mt-3">
                            <label class="form-label">Phí trung gian công ty máy xây dựng</label>
                            @if (requestUpdateCompanyRole == CompanyRoleEnum.Shipper)
                            {
                                <input type="number" @bind="dto.ShipperFeePercentage" class="form-control" />
                            }
                            else
                            {
                                <input type="number" style="background-color:lightgray">
                            }
                        </div>

                        <div class="form-group mt-3">
                            <label class="form-label">Phí trung gian công ty vận chuyển</label>
                            @if (requestUpdateCompanyRole == CompanyRoleEnum.Carrier)
                            {
                                <input type="number" @bind="dto.CarrierFeePercentage" class="form-control" />
                            }
                            else
                            {
                                <input type="number" style="background-color:lightgray">
                            }
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Kích hoạt</label>
                            <input type="checkbox" @bind="dto.IsActive" class="form-control" />
                        </div>
                    }

                </div>
                <div class="card-footer row">
                    <div class="form-group col-md-6">
                        <button class="btn btn-secondary ms-2" type="submit" @onclick="Close">Cancel</button>
                    </div>
                    <div class="form-group col-md-6">
                        <button style="max-width:100px" class="btn btn-primary float-end me-2" type="submit" @onclick="Update">Cập nhật</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
</dialog>
    @code {
    [Parameter]
    public UpdateCompanyDTO dto { get; set; } = new();
    [Parameter]
    public EventCallback Finish { get; set; }
    [Parameter]
    public CompanyRoleEnum? currentCompanyRole { get; set; } = new();
    [Parameter]
    public CompanyRoleEnum? requestUpdateCompanyRole { get; set; } = new();
    async void Close()
    {
        await js.InvokeVoidAsync("CloseDialog", "my-company");
    }

    async Task OpenDialog()
    {
        await js.InvokeVoidAsync("OpenDialog", "my-company");
    }

    async Task Update()
    {
        var result = await CompanyService.UpdateCompanyInforByAdminOfCompany(dto);
        await js.InvokeVoidAsync("alert", result.Message);
        if(result.Flag)
        {
            Close();
            await Finish.InvokeAsync();
        }
    }
}
